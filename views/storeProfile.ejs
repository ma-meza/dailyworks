<% include partials/regularEmptyHead.ejs %>
<% include partials/clientTopNavBar.ejs %>
<% include partials/clientBottomNavBar.ejs %>


<% if(locals.storeObj){ %>
  <script>
    serverStoreObj = <%- storeObj %>
  </script>

<% storeObj = JSON.parse(storeObj) %>

<script>
    var appointmentInfos = {
      storeName:'<%= storeObj.storeName %>',
      storeId:'<%= storeObj._id %>',
      services:null,
      startDate:null,
      endDate:null,
      startTime:null,
      endTime:null,
      fullStartDate:null,
      fullEndDate:null,
      employee:null,
      addNote:null,
      duration:0
    };

  function minutesTo12HourString(minutes){
    minutes = parseInt(minutes);
    //hour, minute, ampm, timestring
    var nbHours = Math.floor(minutes/60);
    var nbMinutes = minutes - (nbHours*60);
    var hourString = "";
    var amPmString = "";
    if(nbHours<10){
      hourString+= "0"+nbHours+":";
      amPmString = "AM";
    }else if(nbHours<12){
      hourString+= nbHours+":";
      amPmString = "AM";
    }else if(nbHours == 12){
      hourString+= nbHours+":";
      amPmString = "PM";
    }else{
      hourString+= (nbHours - 12)+":";
      amPmString = "PM";
    }
    if(nbMinutes == 0){
      hourString+="00";
    }else if(nbMinutes < 10){
      hourString+="0"+nbMinutes;
    }else{
      hourString+=nbMinutes;
    }
    return hourString+amPmString;
  }
</script>


<div id="topNavBar">
  <img id="logoImgHeader" src="/assets/logos/dwFullLogoBlack.svg" alt="">
  <a id="topSignupLink" href="/signup"><%= __('Sign up') %></a>
</div>

<div id="primaryInfoParentContainer">
  <div id="primaryInfoCardContainer">
    <p id="storeNameP"><%= storeObj.storeName %></p>
    <% if(storeObj.type == 0){%>
    <p id="storeTypeP">Mechanic</p>
    <% }else if(storeObj.type == 2){%>
      <p id="storeTypeP">Dentist</p>
    <% } %>
    <p id="storeLocationP"><%= storeObj.location %></p>

    <% if(storeObj.claimed == false){ %>
      <a id="claimBusinessP" href="/claimBusiness?<%= storeObj._id %>"><img src="/assets/icons/octiconsSvg/verified.svg" alt=""> Claim this business</a>
    <% } %>
  </div>
</div>

<div id="secondaryInfoParentContainer">

  <div class="secondaryInfoCardContainer">
    <div id="serviceParentContainer">
      <% for(var i=0; i<storeObj.services.length;i++){ %>
        <div class="serviceEachContainer">
          <p><%= storeObj.services[i].serviceName %></p>
        </div>
      <% } %>
    </div>



    <% if(storeObj.storeDescription){ %>
      <p><%= storeObj.storeDescription %></p>
    <% }else{ %>
      <p class="emptyScreenP">There is no description.</p>
    <% } %>
  </div>


  <div class="secondaryInfoCardContainer">
    <p class="cardTitleP"><img src="/assets/icons/octiconsSvg/clock.svg" alt=""> <script>document.write("Store schedule")</script></p>
    <% if(storeObj.storeSchedule){ %>
      <% if(storeObj.storeSchedule[0]){ %>
        <% if(storeObj.storeSchedule[0].startTime == 0 && storeObj.storeSchedule[0].endTime == 0){ %>
        <p>Sunday: closed</p>
        <% }else{ %>
        <p>Sunday: <script>document.write(minutesTo12HourString(<%= storeObj.storeSchedule[0].startTime %>));</script> - <script>document.write(minutesTo12HourString(<%= storeObj.storeSchedule[0].endTime %>));</script></p>
        <% } %>
      <% } %>

    <% if(storeObj.storeSchedule[1]){ %>
      <% if(storeObj.storeSchedule[1].startTime == 0 && storeObj.storeSchedule[1].endTime == 0){ %>
      <p>Monday: closed</p>
      <% }else{ %>
        <p>Monday: <script>document.write(minutesTo12HourString(<%= storeObj.storeSchedule[1].startTime %>));</script> - <script>document.write(minutesTo12HourString(<%= storeObj.storeSchedule[1].endTime %>));</script></p>
      <% } %>
      <% } %>

    <% if(storeObj.storeSchedule[2]){ %>
      <% if(storeObj.storeSchedule[2].startTime == 0 && storeObj.storeSchedule[2].endTime == 0){ %>
      <p>Tuesday: closed</p>
      <% }else{ %>
        <p>Tuesday: <script>document.write(minutesTo12HourString(<%= storeObj.storeSchedule[2].startTime %>));</script> - <script>document.write(minutesTo12HourString(<%= storeObj.storeSchedule[2].endTime %>));</script></p>

      <% } %>
      <% } %>

    <% if(storeObj.storeSchedule[3]){ %>
      <% if(storeObj.storeSchedule[3].startTime == 0 && storeObj.storeSchedule[3].endTime == 0){ %>
      <p>Wednesday: closed</p>
      <% }else{ %>
        <p>Wednesday: <script>document.write(minutesTo12HourString(<%= storeObj.storeSchedule[3].startTime %>));</script> - <script>document.write(minutesTo12HourString(<%= storeObj.storeSchedule[3].endTime %>));</script></p>
      <% } %>
      <% } %>

    <% if(storeObj.storeSchedule[4]){ %>
      <% if(storeObj.storeSchedule[4].startTime == 0 && storeObj.storeSchedule[4].endTime == 0){ %>
      <p>Thursday: closed</p>
      <% }else{ %>
        <p>Thursday: <script>document.write(minutesTo12HourString(<%= storeObj.storeSchedule[4].startTime %>));</script> - <script>document.write(minutesTo12HourString(<%= storeObj.storeSchedule[4].endTime %>));</script></p>
      <% } %>
      <% } %>

    <% if(storeObj.storeSchedule[5]){ %>
      <% if(storeObj.storeSchedule[5].startTime == 0 && storeObj.storeSchedule[5].endTime == 0){ %>
      <p>Friday: closed</p>
      <% }else{ %>
      <p>Friday: <script>document.write(minutesTo12HourString(<%= storeObj.storeSchedule[5].startTime %>));</script> - <script>document.write(minutesTo12HourString(<%= storeObj.storeSchedule[5].endTime %>));</script></p>
      <% } %>
      <% } %>


    <% if(storeObj.storeSchedule[6]){ %>
      <% if(storeObj.storeSchedule[6].startTime == 0 && storeObj.storeSchedule[6].endTime == 0){ %>
      <p>Saturday: closed</p>
      <% }else{ %>
      <p>Saturday: <script>document.write(minutesTo12HourString(<%= storeObj.storeSchedule[6].startTime %>));</script> - <script>document.write(minutesTo12HourString(<%= storeObj.storeSchedule[6].endTime %>));</script></p>
      <% } %>
    <% } %>
    <% }else{ %>
      <p class="emptyScreenP">Store schedule is not setup.</p>
    <% } %>
  </div>
  <div class="secondaryInfoCardContainer">
    <p class="cardTitleP"><img src="/assets/icons/octiconsSvg/globe.svg" alt=""> <script>document.write("Social")</script></p>
    <% if(storeObj.facebookLink){ %>
      <a href="<%= storeObj.facebookLink %>">Facebook</a>
    <% } %>
    <% if(storeObj.instagramLink){ %>
      <a href="<%= storeObj.instagramLink %>">Instagram</a>
    <% } %>
    <% if(storeObj.phoneNumber){ %>
      <p>Phone: <%= storeObj.phoneNumber %></p>
    <% } %>
  </div>
  <div class="secondaryInfoCardContainer">
    <p class="cardTitleP"><img src="/assets/icons/octiconsSvg/thumbsup.svg" alt=""> <script>document.write("Reviews")</script></p>
    <% if(locals.ratings){ %>

    <% }else{ %>
      <p class="emptyScreenP">There are currently no reviews.</p>
    <% } %>
  </div>
</div>







<div id="appointmentParentContainerDiv">
  <% if(storeObj.claimed == true){ %>
  <div id="servicesMainContainer" class="categoryMainContainer activeDiv">
    <div class="categoryHeader">
      <p id="newAppointmentPopupCloseButton">x</p>
      <p class="divTitleP">Which services do you need?</p>
    </div>
    <div class="categoryContentScroll">
      <div id="servicesContainer">
        <% if(typeof storeObj.services != "undefined"){ %>
          <% if(storeObj.services.length>0){ %>
            <% for(var i=0;i<storeObj.services.length;i++){ %>
              <label class="serviceCheckboxLabel" serviceid="<%= i %>">
                <div class="serviceDivAroundText">
                  <span class="serviceCheckboxSpan"><%= storeObj.services[i].serviceName %></span>
                  <input type="checkbox" class="serviceCheckboxInput" value="">
                </div>
              </label>
            <% } %>
          <% } %>
        <% } %>
        <label class="serviceCheckboxLabel" serviceid="-1">
          <div class="serviceDivAroundText">
            <span class="serviceCheckboxSpan">Other:</span>
            <input type="checkbox" class="serviceCheckboxInput" value="">
            <input type="text" id="otherServiceInput" name="" value="">
          </div>
        </label>
      </div>
      <p id="servicesErrorP"></p>
    </div>
  </div>
  <div id="employeesMainContainer" class="categoryMainContainer">
    <div class="categoryHeader">
      <img src="/assets/icons/octiconsSvg/chevron-left.svg" class="backButton" alt="">
      <p class="divTitleP">By which employee do you want to be served?</p>
    </div>
    <div class="categoryContentScroll">
      <div id="employeeSelectorDivNewAppointment">

      </div>
    </div>
  </div>
  <div id="dateTimesMainContainer" class="categoryMainContainer">
    <div class="categoryHeader">
      <img src="/assets/icons/octiconsSvg/chevron-left.svg" class="backButton" alt="">
      <p class="divTitleP">When do you want your appointment?</p>
    </div>
    <div class="categoryContentScroll">
      <div id="dateSelectorDivNewAppointment">
        <p id="dateSelectorPNewAppointment"><span>Today</span><img src="/assets/icons/octiconsSvg/calendar.svg" alt=""></p>
      </div>
      <div id="timeSelectorDivNewAppointment">

      </div>
    </div>
  </div>
  <div id="summaryMainContainer" class="categoryMainContainer">
    <div class="categoryHeader">
      <img src="/assets/icons/octiconsSvg/chevron-left.svg" class="backButton" alt="">
      <p class="divTitleP">Here's a little summary</p>
    </div>
    <div class="categoryContentScroll">

    </div>
  </div>

  <% if(!locals.loggedIn || loggedIn == false){ %>
    <div id="guestCheckoutMainContainer" class="categoryMainContainer">
      <div class="categoryHeader">
        <img src="/assets/icons/octiconsSvg/chevron-left.svg" class="backButton" alt="">
        <p class="divTitleP">Reserve now for free</p>
      </div>
      <div class="categoryContentScroll">
        <div class="guestCheckoutParentContainers">
          <p class="guestContainerTitle">Guest</p>
          <p class="guestCheckoutLabelInput">Name*</p>
          <input type="text" name="" class="guestCheckoutInput" id="guestNameInput" value="">
          <p class="guestCheckoutErrorLabel" id="errorLabelUnderGuestName"></p>
          <p class="guestCheckoutLabelInput">Email</p>
          <input class="guestCheckoutInput" id="guestEmailInput" type="text" name="" value="">
          <p class="guestCheckoutLabelInput">or Phone</p>
          <input class="guestCheckoutInput" id="guestPhoneInput" type="text" name="" value="">
          <p class="guestCheckoutErrorLabel" id="errorLabelUnderGuestPhone"></p>
          <p class="guestCheckoutTextDescription">You'll have an opportunity to create an account at the end.</p>
          <button class="guestCheckoutSubmitButton" id="guestCheckoutButton" type="button" name="button">Reserve now as guest</button>
        </div>
        <hr id="guestCheckoutHorizontalSeparator">
        <div class="guestCheckoutParentContainers">
          <p class="guestContainerTitle">Member</p>
          <p class="guestCheckoutLabelInput">Email*</p>
          <input class="guestCheckoutInput" id="loginEmailInput" type="text" name="" value="">
          <p class="guestCheckoutErrorLabel" id="errorLabelUnderLoginEmail"></p>
          <p class="guestCheckoutLabelInput">Password*</p>
          <input class="guestCheckoutInput" id="loginPasswordInput" type="password" name="" value="">
          <p class="guestCheckoutErrorLabel" id="errorLabelUnderLoginPassword"></p>
          <button class="guestCheckoutSubmitButton" id="loginCheckoutButton" type="button" name="button">Login now and reserve</button>
        </div>
      </div>
    </div>
  <% }%>

  <div id="confirmationMainContainer" class="categoryMainContainer">
    <div class="categoryHeader">
      <p class="divTitleP">Congrats!</p>
    </div>
    <div class="categoryContentScroll">

    </div>
  </div>
  <div id="categoryFooter">
    <button type="button" id="nextButton" class="nextButton" name="button">Next</button>
  </div>
  <% }else{ %>
    <p id="notClaimedDivCloseButton">X</p>
    <div id="notClaimedChildContainer">
      <p id="notClaimedPTitle">Looks like this business hasn't registered yet for online appointments.</p>
      <p id="notClaimedPText">We've notified the owner that you wanted to book online so he quickly finishes setting up his account.</p>
      <img src="https://cdn.dribbble.com/users/1061799/screenshots/4510769/notification.png" alt="sadIllustration">
    </div>

    <% } %>
</div>




<div id="bottomCtaParentContainer">
  <button id="bookNowButton" name="button">Reserve now for free</button>
</div>


<% if(storeObj.claimed == false){ %>
  <style media="screen">
    @media screen and (min-width:1150px){
      #appointmentParentContainerDiv{
        overflow-y:auto !important;
      }
    }
  </style>

<% } %>
<style media="screen">
.guestCheckoutTextDescription{
  margin:0 20px 0 20px;
  width:calc(100% - 40px);
}
.guestCheckoutParentContainers{
  position:relative;
  top:0;
  left:0;
  margin:0 0 30px 0;
  width:100%;
  min-height:10px;
  border:none;
}
.guestContainerTitle{
  font-size:var(--desktop-font-size-modal-title);
  font-weight:var(--mobile-font-weight-bold);
  width:100%;
  margin:0 0 20px 0;
  padding:0 20px 0 20px;
}
.guestCheckoutInput{
  display:block;
  position:relative;
  width:calc(100% - 40px);
  left:20px;
  height:35px;
  margin:0 0 10px 0;
  border:1px solid #000;
  padding:0 20px 0 20px;
}
.guestCheckoutLabelInput{
  font-size:var(--desktop-font-size-regular);
  font-weight:var(--mobile-font-weight-regular);
  width:100%;
  margin:0 0 5px 0;
  padding:0 20px 0 20px;
}
.guestCheckoutSubmitButton{
  width:calc(100% - 40px);
  left:20px;
  position:relative;
  height:35px;
  border-radius:4px;
  border:none;
  color:#fff;
  font-size:var(--desktop-font-size-regular);
  font-weight:var(--mobile-font-weight-medium);
  background-color:var(--cta-accent-color);
  cursor:pointer;
}

.guestCheckoutErrorLabel{
font-size:var(--desktop-font-size-regular);
font-weight:var(--mobile-font-size-regular);
width:100%;
padding:0 20px 0 20px;
margin:0;
color:var(--font-color-red);
}
#guestCheckoutHorizontalSeparator{
  display: block;
  width:calc(100% - 40px);
  position:relative;
  left:20px;
  margin:0 0 20px 0;
  border:1px solid #000;
}

  @media screen and (max-width:780px){
    #topNavBar{
      width:100%;
      height:60px;
      left:0;
      top:0;
      margin:0;
      padding-top:20px;
      position:relative;
    }
    #topSignupLink{
      font-size:var(--mobile-font-size-regular);
      font-weight:var(--mobile-font-weight-medium);
      position: relative;
      float: right;
      margin: 0 20px 0 0;
      color:#000;
    }
    #logoImgHeader{
      height:calc(100% - 17px);
      position:relative;
      margin:0 0 0 20px;
      top:0;
      left:0;
    }
    #primaryInfoParentContainer{
      position:relative;
      top:0;
      margin-top:0;
      left:0;
      background-color:#d9d9d9;
      width:100%;
      height:auto;
      min-height:100px;
      padding:20px;
    }
    #appointmentParentContainerDiv{
      width:100%;
      position:fixed;
      top:0px;
      left:0;
      height:calc(100% - 50px);
      border:none;
      overflow:hidden;
      background-color:#fff;
      z-index:1;
      display:none;
    }
    #secondaryInfoParentContainer{
      position:relative;
      top:0;
      width:100%;
      background-color:#fff;
      min-height:700px;
      padding:20px;
    }
    #primaryInfoCardContainer{
      position:relative;
      min-height:60px;
      background-color:#fff;
      width:max-content;
      max-width:80%;
      padding:20px 60px 20px 20px;
    }
    #bookNowButton{
      position:absolute;
      padding:15px 20px;
      right:20px;
      top:50%;
      transform:translateY(-50%);
      border-radius:8px;
      border:none;
      cursor:pointer;
      background-color:var(--cta-accent-color);
      color:#fff;
      font-size:var(--desktop-font-size-modal-title);
      font-weight:var(--mobile-font-weight-medium-regular);
    }
    #bottomCtaParentContainer{
      position:fixed;
      bottom:50px;
      width:100%;
      height:80px;
      background-color:transparent;
    }
    #notClaimedDivCloseButton{
      position:absolute;
      top:20px;
      right:20px;
      cursor:pointer;
      margin:0;
      font-weight:var(--mobile-font-weight-bold);
      font-size:var(--mobile-font-size-big);
    }
    .activeNewAppointmentDiv{
      display:block !important;
    }
    #notClaimedChildContainer{
    position:relative;
    top:10%;
    width:100%;
    min-height:20px;
    }
    .categoryMainContainer{
      width:100%;
      left:100%;
      position:absolute;
      top:0;
      height:calc(100% - 55px);
      transition:all 0.3s ease-out 0s;
      background-color:#fff;
    }
    #categoryFooter{
      position:absolute;
      bottom:0;
      left:0;
      width:100%;
      height:55px;
      border:none;
    }
    #newAppointmentPopupCloseButton{
      position: relative;
      width: max-content;
      left: calc(100% - 40px);
      top: 0;
      margin: 0;
      text-align: left;
      font-size: 25px;
      cursor: pointer;
      font-weight: var(--mobile-font-weight-bold);
    }
  }


  @media screen and (min-width:1150px){
    #topNavBar{
      display:none;
    }
    #primaryInfoParentContainer{
      position:relative;
      top:0;
      margin-top:60px;
      left:0;
      background-color:#d9d9d9;
      width:100%;
      height:auto;
      min-height:100px;
      padding:20px;
    }
    #secondaryInfoParentContainer{
      position:relative;
      top:0;
      width:40%;
      left:15%;
      background-color:#fff;
      padding:20px;
    }
    #primaryInfoCardContainer{
      position:relative;
      min-height:60px;
      left:15%;
      background-color:#fff;
      width:max-content;
      max-width:80%;
      padding:20px 60px 20px 20px;
    }
    #appointmentParentContainerDiv{
      width:calc(30% - 20px);
      position:fixed;
      top:30px;
      right:15%;
      height:calc(100% - 100px);
      border:var(--nav-bar-border);
      border-radius:8px;
      overflow:hidden;
      background-color:#fff;
      z-index:20;
      max-height:618px;
    }
    #bottomCtaParentContainer{
      display:none;
    }
    #notClaimedDivCloseButton{
      display:none;
    }
    #notClaimedChildContainer{
    position:relative;
    top:10%;
    width:100%;
    min-height:20px;
    left:0;
    }
    .categoryMainContainer{
      width:100%;
      left:100%;
      position:absolute;
      top:0;
      height:calc(100% - 55px);
      transition:all 0.3s ease-out 0s;
      background-color:#fff;
    }
    .activeDiv{
      left:0 !important;
    }
    #categoryFooter{
      position:absolute;
      bottom:0;
      left:0;
      width:100%;
      height:55px;
      border:none;
    }
    #newAppointmentPopupCloseButton{
      display:none;
    }
  }



  @media screen and (max-width:1150px) and (min-width:780px){
    #topNavBar{
      display:none;
    }
    #primaryInfoParentContainer{
      position:relative;
      top:0;
      margin-top:60px;
      left:0;
      background-color:#d9d9d9;
      width:100%;
      height:auto;
      min-height:100px;
      padding:20px;
    }
    #secondaryInfoParentContainer{
      position:relative;
      top:0;
      width:70%;
      left:15%;
      background-color:#fff;
      min-height:700px;
      padding:20px;
    }
    #bookNowButton{
      position:absolute;
      padding:15px 20px;
      right:calc(15% + 20px);
      top:50%;
      transform:translateY(-50%);
      border-radius:8px;
      border:none;
      cursor:pointer;
      background-color:var(--cta-accent-color);
      color:#fff;
      font-size:var(--desktop-font-size-modal-title);
      font-weight:var(--mobile-font-weight-medium-regular);
    }
    #primaryInfoCardContainer{
      position:relative;
      min-height:60px;
      left:15%;
      background-color:#fff;
      width:max-content;
      max-width:80%;
      padding:20px 60px 20px 20px;
    }
    #appointmentParentContainerDiv{
      width:100%;
      position:fixed;
      top:60px;
      left:0;
      height:calc(100% - 60px);
      border:none;
      overflow:hidden;
      display:none;
      background-color:#fff;
      z-index:20;
    }
    #bottomCtaParentContainer{
      position:fixed;
      bottom:0;
      width:100%;
      height:80px;
      background-color:#fff;
    }
    #notClaimedDivCloseButton{
      position:absolute;
      top:20px;
      right:15%;
      cursor:pointer;
      margin:0;
      font-weight:var(--mobile-font-weight-bold);
      font-size:var(--mobile-font-size-big);
    }
    .activeNewAppointmentDiv{
      display:block !important;
    }
    #notClaimedChildContainer{
    position:relative;
    top:12%;
    left:15%;
    width:70%;
    min-height:20px;
    }

    .categoryMainContainer{
      width:70%;
      left:100%;
      position:absolute;
      top:0;
      height:calc(100% - 55px);
      transition:all 0.3s ease-out 0s;
      background-color:#fff;
    }
    .activeDiv{
      left:15% !important;
    }
    #categoryFooter{
      position:absolute;
      bottom:0;
      left:15%;
      width:70%;
      height:55px;
      border:none;
    }
    #newAppointmentPopupCloseButton{
      position: relative;
      width: max-content;
      left: calc(100% - 40px);
      top: 0;
      margin: 0;
      text-align: left;
      font-size: 30px;
      cursor: pointer;
      font-weight: var(--mobile-font-weight-bold);
    }
  }



#claimBusinessP{
  margin-top: 0;
  margin-bottom: 10px;
  font-size:15px;
}
#notClaimedChildContainer img{
  position:relative;
  left:10%;
  width:80%;
}
#notClaimedPTitle{
position:relative;
display:block;
width:100%;
margin:0 0 20px 0;
padding:0 20px 20px 20px;
text-align:left;
font-weight:var(--mobile-font-weight-bold);
font-size:var(--mobile-font-size-extra-big);
}
#notClaimedPText{
position:relative;
display:block;
width:100%;
margin:0;
padding:0 20px 0 20px;
text-align:justify;
font-weight:var(--mobile-font-weight-regular);
font-size:var(--mobile-font-size-regular);
}
#notClaimedButton{
  position:relative;
  display:block;
  padding:15px 20px;
  border-radius:8px;
  border:none;
  cursor:pointer;
  background-color:var(--cta-accent-color);
  color:#fff;
  font-size:var(--desktop-font-size-modal-title);
  font-weight:var(--mobile-font-weight-medium-regular);
  left:50%;
  transform:translateX(-50%);
}

  .secondaryInfoCardContainer{
    width:100%;
    min-height:100px;
    background-color:#fff;
    border-bottom:var(--nav-bar-border);
    padding-top:20px;
    padding-bottom:20px;
  }
  .secondaryInfoCardContainer:last-child{
    margin-bottom:150px;
  }
  #primaryInfoCardContainer p{
    margin-top:0;
    margin-bottom:10px;
  }
  #storeNameP{
    font-weight:var(--mobile-font-weight-bold);
    font-size:var(--desktop-font-size-page-title);
  }
  .cardTitleP{
    font-weight:var(--mobile-font-weight-medium);
    font-size:var(--desktop-font-size-big);
    margin:0;
  }

  .emptyScreenP{
    width:100%;
    font-weight:var(--mobile-font-weight-medium-regular);
    font-size:var(--desktop-font-size-regular);
    text-align:center;

  }
  #serviceParentContainer{
    position:relative;
    height:auto;
    width:100%;
    overflow-x:auto;
    margin-bottom:25px;
    white-space:nowrap;
    padding-bottom:15px;
  }
  .serviceEachContainer{
    position:relative;
    display:inline-block;
    border-radius:8px;
    background-color:#d9d9d9;
    padding:10px 20px;
    margin-right:10px;
  }
  .serviceEachContainer p{
    margin:0;
  }
  .noScroll{
    overflow:hidden;
  }
</style>

<script>
  var newAppointmentContainer = document.getElementById('appointmentParentContainerDiv');






  document.getElementById('bookNowButton').onclick = function(){
    newAppointmentContainer.classList.add("activeNewAppointmentDiv");
    document.body.style.overflow = "hidden";
  };







  var mediaQuery = window.matchMedia("(min-width: 1150px)")
  var secondaryInfoParentContainer = document.getElementById('secondaryInfoParentContainer');
  //set position of new apptmnt div top math info div top
  var secondaryInfoBounds = secondaryInfoParentContainer.getBoundingClientRect();
  var baseTopPos = secondaryInfoBounds.top+20+window.pageYOffset;
  if(mediaQuery.matches){
    setNewAppointmentTopPosition();
  }


//on scrollfunction
window.addEventListener("scroll", function(){
  if (mediaQuery.matches) { // If media query matches
    setNewAppointmentTopPosition();
  }else{
    newAppointmentContainer.style.top = "0px";
  }
}, {passive: true});


//on viewport change
  mediaQuery.addListener(function(){
    if (mediaQuery.matches) { // If media query matches
      setNewAppointmentTopPosition();
    }else{
      newAppointmentContainer.style.top = "0px";
    }
  }) // Attach listener function on state changes


//layout modifier function
  function setNewAppointmentTopPosition(){
    if(window.pageYOffset<=200){
      var newTopPosition = (baseTopPos - window.pageYOffset)+"px";
      newAppointmentContainer.style.top = newTopPosition;
    }else{
      newAppointmentContainer.style.top = (baseTopPos - 200)+"px";
    }
  }








<% if(storeObj.claimed == true){ %>
  document.getElementById("newAppointmentPopupCloseButton").onclick = function(){
    newAppointmentContainer.classList.remove("activeNewAppointmentDiv");
    document.body.style.overflow = "scroll";
  };



  var servicesMainContainer = document.getElementById("servicesMainContainer");
  var employeesMainContainer = document.getElementById("employeesMainContainer");
  var dateTimesMainContainer = document.getElementById("dateTimesMainContainer");
  var summaryMainContainer = document.getElementById("summaryMainContainer");
  var guestCheckoutMainContainer = document.getElementById("guestCheckoutMainContainer");
  var confirmationMainContainer = document.getElementById("confirmationMainContainer");


<% if(!locals.loggedIn || locals.loggedIn == false){ %>
  document.getElementById("guestCheckoutButton").onclick = function(){
    var errorLabels = document.getElementsByClassName('guestCheckoutErrorLabel');
    for(var p=0;p<errorLabels.length;p++){
      errorLabels[p].innerText = "";
    }
    var guestEmailInput = document.getElementById('guestEmailInput');
    var guestPhoneInput = document.getElementById('guestPhoneInput');
    var guestNameInput = document.getElementById("guestNameInput");
    if((guestEmailInput.value.length>0 || guestPhoneInput.value.length>0) && guestNameInput.value.length>0){
      appointmentInfos.tryLogin = false;
      var clientInfo = {};
      if(guestEmailInput.value.length>0){
        clientInfo.email = guestEmailInput.value;
      }
      if(guestPhoneInput.value.length>0){
        clientInfo.phone = guestPhoneInput.value;
      }
      clientInfo.name = guestNameInput.value;
      appointmentInfos.clientInfo = clientInfo;
      console.log(appointmentInfos);

      $.ajax({
         url : '/clientCreateAppointment',
         type : 'POST',
         data:{appointmentInfos:appointmentInfos},
         success : function(data, textStatut){
           if(data == "error"){

          }else{
            if(data.unconfirmedUserId && data.appointmentId){
              var newUserId = data.unconfirmedUserId;
              var appointmentId = data.appointmentId;
              var confirmationPTitle = document.createElement("p");
              confirmationPTitle.innerText = "You have successfully booked with "+appointmentInfos.storeName;
              var confirmationRegularText = document.createElement('p');
              if(guestEmailInput.value.length>0 && guestPhoneInput.value.length>0){
                //phone and email are fille din
                confirmationRegularText.innerText = "We've sent you a text message and email with a link to confirm your appointment. If you do no not click on one of the two links within 12 hours, your appointment will be cancelled.";
              }else if(guestEmailInput.value.length>0){
                //only email is filles in
                confirmationRegularText.innerText = "We've sent you an email with a link to confirm your appointment. If you do no not click on the link within 12 hours, your appointment will be cancelled.";
              }else{
                //only phone is filled in
                confirmationRegularText.innerText = "We've sent you a text message with a link to confirm your appointment. If you do no not click on the link within 12 hours, your appointment will be cancelled.";
              }
              var modificationLink = document.createElement('a');
              modificationLink.innerText = "To modify your appointment, click here.";
              modificationLink.href = '/modifyAppointment?aid='+appointmentId;
              var contentParentContainer = confirmationMainContainer.getElementsByClassName("categoryContentScroll")[0];
              contentParentContainer.appendChild(confirmationPTitle);
              contentParentContainer.appendChild(confirmationRegularText);
              contentParentContainer.appendChild(modificationLink);
              moveNext();
            }
           }
         },
         error : function(textStatut, errorThrown){
           document.getElementById("errorLabelUnderGuestPhone").innerText = "Mhh there's a server error. Please try again.";
         }
      });
    }else{
      if(guestEmailInput.value.length == 0 && guestPhoneInput.value.length == 0){
        document.getElementById("errorLabelUnderGuestPhone").innerText = "Please fill in your email address or phone number";
      }
      if(guestNameInput.value.length == 0){
        document.getElementById('errorLabelUnderGuestName').innerText = "Please fill in your name";
      }
    }
  }

  document.getElementById("loginCheckoutButton").onclick = function(){
    var errorLabels = document.getElementsByClassName('guestCheckoutErrorLabel');
    for(var p=0;p<errorLabels.length;p++){
      errorLabels[p].innerText = "";
    }
    var loginEmailInput = document.getElementById('loginEmailInput');
    var loginPasswordInput = document.getElementById('loginPasswordInput');
    if(loginEmailInput.value.length>0 && loginPasswordInput.value.length>0){
      appointmentInfos.tryLogin = true;
      var clientInfo = {};
      clientInfo.email = loginEmailInput.value;
      clientInfo.password = loginPasswordInput.value;
      appointmentInfos.clientInfo = clientInfo;
      console.log(appointmentInfos);
      $.ajax({
         url : '/clientCreateAppointment',
         type : 'POST',
         data:{appointmentInfos:appointmentInfos},
         success : function(data, textStatut){
           if(data == "error"){
            document.getElementById("errorLabelUnderLoginPassword").innerText = "oups there's a server error, please try again.";
           }else if(data == "passwordNoMatch"){
            document.getElementById("errorLabelUnderLoginPassword").innerText = "The password entered doesn't match what we have on records.";
          }else if(data == 'userNoExist'){
            document.getElementById("errorLabelUnderLoginPassword").innerText = "Looks like this email is not registered with us";
          }else {
            if(data.appointmentId){
              window.location = "/successAppointmentLoggedIn?aid="+data.appointmentId;
            }else{
              document.getElementById("errorLabelUnderLoginPassword").innerText = "oups there's a server error, please try again.";
            }
          }
         },
         error : function(textStatut, errorThrown){
           console.log(textStatut);
           console.log(errorThrown)
         }
      });
    }else{
      if(loginEmailInput.value.length == 0){
        document.getElementById("errorLabelUnderLoginEmail").innerText = "Please fill in your email";
      }
      if(loginPasswordInput.value.length == 0){
        document.getElementById("errorLabelUnderLoginPassword").innerText = "Please fill in your password";
      }
    }
  }
<% }else{ %>
  function submitAppointmentUserLoggedIn(){
    $.ajax({
       url : '/clientCreateAppointment',
       type : 'POST',
       data:{appointmentInfos:appointmentInfos},
       success : function(data, textStatut){
         if(data == "error"){

        }else {
          if(data.appointmentId){
            alert(data.appointmentId);
          }else{

          }
        }
       },
       error : function(textStatut, errorThrown){
         console.log(textStatut);
         console.log(errorThrown)
       }
    });
  }
<% } %>




var currentDivPosition = 0;
var daysWeekStoreClosed = [];
var storeScheduleWeek = [];

<% for(var t=0;t<storeObj.storeSchedule.length;t++){ %>
        storeScheduleWeek[<%= storeObj.storeSchedule[t].weekDay %>] = {startTime:<%= storeObj.storeSchedule[t].startTime %>, endTime:<%= storeObj.storeSchedule[t].endTime %>};
        if(<%= storeObj.storeSchedule[t].startTime %> == 0 && <%= storeObj.storeSchedule[t].endTime %> == 0){
          //store closed
          daysWeekStoreClosed.push(<%= storeObj.storeSchedule[t].weekDay %>);
        }
<% } %>

var datePickedAppointment = new Date();




//onclick of date selector
document.getElementById("dateSelectorDivNewAppointment").onclick = function(){
  createTheCalendarPopup(function(dateSelected){


    var dateSelected = new Date(dateSelected);
    var pickedEmployeeId = -1;
    if(appointmentInfos.employee == null || appointmentInfos.employee.id == -1){
      pickedEmployeeId = -1;
    }else{
      pickedEmployeeId = appointmentInfos.employee.id;
    }

    console.log(daysWeekStoreClosed+" find "+dateSelected.getDay());
    if(daysWeekStoreClosed.indexOf(dateSelected.getDay()) == -1){
      console.log("found it");
      //store is opened
      $.ajax({
         url : '/getStoreEventsOfDate',
         type : 'GET',
         data:{dateWanted:dateSelected, storeId:'<%= storeObj._id %>', employeeId:pickedEmployeeId},
         success : function(data, textStatut){
           if(data =="error"){
             renderMessageNoTimeSlots("Oups there was an error, please try again.");
           }else{
             datePickedAppointment = dateSelected;
             var dateString = monthsName[datePickedAppointment.getMonth()]+" "+datePickedAppointment.getDate()+", "+datePickedAppointment.getFullYear();
             document.getElementById('dateSelectorPNewAppointment').getElementsByTagName("span")[0].innerText = dateString;

             renderAvailableTimeSlots(data, storeScheduleWeek[datePickedAppointment.getDay()]);
           }
         },
         error : function(textStatut, errorThrown){
           renderMessageNoTimeSlots("Oups there was an error, please try again.");
         }
      });
    }else{
      console.log("store is closed "+ dateSelected);
      datePickedAppointment = dateSelected;
      var dateString = monthsName[datePickedAppointment.getMonth()]+" "+datePickedAppointment.getDate()+", "+datePickedAppointment.getFullYear();
      document.getElementById('dateSelectorPNewAppointment').getElementsByTagName("span")[0].innerText = dateString;
      renderMessageNoTimeSlots("Store closed");
    }
  });
};

var backButtons = document.getElementsByClassName("backButton");
for(var i = 0;i<backButtons.length;i++){
  backButtons[i].onclick = function(){
    moveBack();
  }
}

var nextButton = document.getElementById("nextButton");
nextButton.onclick = function(){
  moveNext();
}



function moveNext(){
  currentDivPosition++;
  switch(currentDivPosition){
    case 1:
    var errorP = document.getElementById("servicesErrorP");
    errorP.innerText = "";
    appointmentInfos.services = [];
    appointmentInfos.duration = 0;
    var checkboxContainer = document.getElementsByClassName("serviceCheckboxLabel");
    for(var i=0;i<checkboxContainer.length;i++){
      var serviceInput = checkboxContainer[i].getElementsByClassName("serviceCheckboxInput")[0];
      if(serviceInput.checked == true){
        var serviceIdInArray = checkboxContainer[i].getAttribute("serviceid");
        var serviceObj = {};
        if(serviceIdInArray == -1){
          //custom service selection
          serviceObj.id = -1;
          serviceObj.serviceName = document.getElementById("otherServiceInput").value;
          serviceObj.price = -1;
        }else{
          //regular service selection
          serviceObj.id = serverStoreObj.services[serviceIdInArray]._id;
          serviceObj.serviceName = serverStoreObj.services[serviceIdInArray].serviceName;
          serviceObj.price = serverStoreObj.services[serviceIdInArray].price;
          appointmentInfos.duration += serverStoreObj.services[serviceIdInArray].duration;
        }
        appointmentInfos.services.push(serviceObj);
      }
    }
    if(appointmentInfos.services!= null && appointmentInfos.services.length>0){
      var  employeeSelectorParentContainer = document.getElementById("employeeSelectorDivNewAppointment");
      employeeSelectorParentContainer.innerHTML = "";
      if(true == <%= storeObj.clientCanPickEmployee %>){
        document.getElementById("nextButton").innerHTML = 'Next<div class="lds-ring"><div></div><div></div><div></div><div></div></div>';

        //create the no preference employe and make it CHECKED by default
        addEmployeeToSelector("No preference", -1, employeeSelectorParentContainer).checked = "checked";

        for(var m = 0; m<serverStoreObj.employees.length;m++){
          var thisEmployeeDoesAllServices = true;
          for(var t=0;t<appointmentInfos.services.length;t++){
            var serviceFound = false;
              for(var y=0;y<serverStoreObj.employees[m].servicesOffered.length;y++){
                if(appointmentInfos.services[t].id != -1){
                  if(serverStoreObj.employees[m].servicesOffered[y]._id == appointmentInfos.services[t].id){
                    serviceFound = true;
                    break;
                  }
                }
            }
            if(serviceFound == false){
              thisEmployeeDoesAllServices = false;
              break;
            }
          }
          if(thisEmployeeDoesAllServices == true){
            addEmployeeToSelector(serverStoreObj.employees[m].employeeName,m, employeeSelectorParentContainer);
          }
        }

        servicesMainContainer.classList.remove('activeDiv');
        servicesMainContainer.classList.add('leftPastDiv');
        employeesMainContainer.classList.add('activeDiv');
        document.getElementById("nextButton").innerHTML = 'Next';
      }else{
        datePickedAppointment = new Date();
        document.getElementById('dateSelectorPNewAppointment').getElementsByTagName("span")[0].innerText = "Today";

        document.getElementById("nextButton").innerHTML = 'Next<div class="lds-ring"><div></div><div></div><div></div><div></div></div>';

        if(daysWeekStoreClosed.indexOf(datePickedAppointment.getDay()) == -1){
          //store is opened that day

          $.ajax({
             url : '/getStoreEventsOfDate',
             type : 'GET',
             data:{dateWanted:datePickedAppointment, storeId:'<%= storeObj._id %>', employeeId:-1},
             success : function(data, textStatut){
               if(data =="error"){

                 renderMessageNoTimeSlots("Oups there was an error, please try again.");
               }else{
                 renderAvailableTimeSlots(data, storeScheduleWeek[datePickedAppointment.getDay()]);
               }
             },
             error : function(textStatut, errorThrown){

               renderMessageNoTimeSlots("Oups there was an error, please try again.");
             }
          });
        }else{
          //store is closed that day
          console.log("store is closed"+datePickedAppointment);
          renderMessageNoTimeSlots("Store closed");
        }

        servicesMainContainer.classList.remove('activeDiv');
        servicesMainContainer.classList.add('leftPastDiv');
        dateTimesMainContainer.classList.add('activeDiv');
        currentDivPosition++;
      }
      errorP.innerText = "";
    }else{
      errorP.innerText = "Please select at least one service.";
      currentDivPosition--;
    }
    break;
    case 2:
    datePickedAppointment = new Date();
    document.getElementById('dateSelectorPNewAppointment').getElementsByTagName("span")[0].innerText = "Today";
    //go from employees to date

    //check who is the employee radio checked
    var employeeContainers = document.getElementsByClassName('employeeCheckboxLabel');
    for(var i=0;employeeContainers.length;i++){
      var employeeInput = employeeContainers[i].getElementsByTagName("input")[0];
      if(employeeInput.checked == true){
        var employeeIdAttribute = employeeContainers[i].getAttribute("employeeid");
        if(employeeIdAttribute != -1){
          //yes preference employee
          appointmentInfos.employee = serverStoreObj.employees[employeeIdAttribute];
        }
        if(daysWeekStoreClosed.indexOf(datePickedAppointment.getDay()) == -1){
          document.getElementById('dateSelectorPNewAppointment').getElementsByTagName("span")[0].innerText = "Today";
          //store opened
          var ajaxEmployeeId = "";
          if(appointmentInfos.employee == null || appointmentInfos.employee._id == -1){
            ajaxEmployeeId = -1;
          }else{
            ajaxEmployeeId = appointmentInfos.employee._id;
          }
          //store is opened that day
          $.ajax({
             url : '/getStoreEventsOfDate',
             type : 'GET',
             data:{dateWanted:datePickedAppointment, storeId:'<%= storeObj._id %>', employeeId:ajaxEmployeeId},
             success : function(data, textStatut){
               if(data =="error"){
                 renderMessageNoTimeSlots("Oups there was an error, please try again.");
               }else{
                 renderAvailableTimeSlots(data, storeScheduleWeek[datePickedAppointment.getDay()]);
               }

             },
             error : function(textStatut, errorThrown){
               renderMessageNoTimeSlots("Oups there was an error, please try again.");
             }
          });
        }else{
          console.log("store is closed "+datePickedAppointment);
          //store is closed that day
          renderMessageNoTimeSlots("Store closed");
        }

        employeesMainContainer.classList.remove('activeDiv');
        employeesMainContainer.classList.add('leftPastDiv');
        dateTimesMainContainer.classList.add("activeDiv");
        break;
      }
    }

    break;
    case 3:
    //go from date to summary


    //checked which is the selected date
    var timeSelectorContainers = dateTimesMainContainer.getElementsByClassName('timeCheckboxLabel');
    var aTimeHasBeenSelected = false;
    for(var i=0;i<timeSelectorContainers.length;i++){
      var timeInput = timeSelectorContainers[i].getElementsByTagName("input");
      if(timeInput[0] && timeInput[0].checked == true){
        aTimeHasBeenSelected = true;
        var startTimeAttribute = timeSelectorContainers[i].getAttribute("starttime");
        var endTimeAttribute = timeSelectorContainers[i].getAttribute("endtime");
        appointmentInfos.startTime = startTimeAttribute;
        appointmentInfos.endTime = endTimeAttribute;
        break;
      }
    }
    if(aTimeHasBeenSelected == true){
      dateTimesMainContainer.classList.remove("activeDiv");
      dateTimesMainContainer.classList.add('leftPastDiv');
      summaryMainContainer.classList.add('activeDiv');

      appointmentInfos.startDate = new Date(datePickedAppointment);
      appointmentInfos.endDate = new Date(datePickedAppointment);


      function extractH23AndMinutesFromMinutes(allMinutes){
        var hours = Math.floor(allMinutes/60);
        var minutes = allMinutes - (hours*60);
        if(hours == 24){
          hours = 23;
        }
        return {hours:hours, minutes:minutes}
      }
      var startTimeObj = extractH23AndMinutesFromMinutes(appointmentInfos.startTime);
      var endTimeObj = extractH23AndMinutesFromMinutes(appointmentInfos.endTime);

      var startDateFakeHour = new Date(appointmentInfos.startDate);
      var endDateFakeHour = new Date(appointmentInfos.endDate);


      startDateFakeHour.setHours(startTimeObj.hours);
      startDateFakeHour.setMinutes(startTimeObj.minutes);
      startDateFakeHour.setMilliseconds(0);
      startDateFakeHour.setSeconds(0);

      endDateFakeHour.setHours(endTimeObj.hours);
      endDateFakeHour.setMinutes(endTimeObj.minutes);
      endDateFakeHour.setMilliseconds(0);
      endDateFakeHour.setSeconds(0);

      appointmentInfos.fullStartDate = new Date(startDateFakeHour);
      appointmentInfos.fullEndDate = new Date(endDateFakeHour);
      <% if(locals.loggedIn && loggedIn == true){%>
        //user is loggedin
        nextButton.innerText = "Reserve now";
      <% } %>

    }else{
      currentDivPosition--;
    }

    break;
    case 4:
    <% if(!locals.loggedIn || loggedIn == false){ %>
      //go from summary to guest checkout
      guestCheckoutMainContainer.classList.add("activeDiv");
      summaryMainContainer.classList.remove('activeDiv');
      summaryMainContainer.classList.add('leftPastDiv');
      document.getElementById("categoryFooter").style.display = "none";
    <% }else{ %>
      //user is loggedin
      submitAppointmentUserLoggedIn();
    <% } %>


    break;
    case 5:
    //submit the appointment in guest mode if not loggedin

    <% if(!locals.loggedIn || loggedIn == false){ %>
      //is not loggedin
      guestCheckoutMainContainer.classList.remove("activeDiv");
      guestCheckoutMainContainer.classList.add("leftPastDiv");
      confirmationMainContainer.classList.add("activeDiv");

      servicesMainContainer.remove();
      employeesMainContainer.remove();
      dateTimesMainContainer.remove();
      summaryMainContainer.remove();
      guestCheckoutMainContainer.remove();
    <% }else{ %>
      currentDivPosition--;
    <% } %>

    break;
    default:
    currentDivPosition--;
    break;
  }
}


function moveBack(){
  currentDivPosition--;
  switch(currentDivPosition){
    case 0:
    servicesMainContainer.classList.add('activeDiv');
    servicesMainContainer.classList.remove('leftPastDiv');
    employeesMainContainer.classList.remove('activeDiv');
    appointmentInfos.services = [];
    appointmentInfos.duration = 0;
    break;
    case 1:
    if(true == <%= storeObj.clientCanPickEmployee %>){
      appointmentInfos.employee = null;
      employeesMainContainer.classList.add('activeDiv');
      employeesMainContainer.classList.remove('leftPastDiv');
      dateTimesMainContainer.classList.remove("activeDiv");
    }else{
      appointmentInfos.services = [];
      appointmentInfos.duration = 0;
      servicesMainContainer.classList.add('activeDiv');
      servicesMainContainer.classList.remove('leftPastDiv');
      dateTimesMainContainer.classList.remove("activeDiv");
      currentDivPosition--;
    }
    break;
    case 2:
    document.getElementById("nextButton").innerText = "Next";
    dateTimesMainContainer.classList.add("activeDiv");
    dateTimesMainContainer.classList.remove('leftPastDiv');
    summaryMainContainer.classList.remove('activeDiv');
    break;
    case 3:
    document.getElementById("categoryFooter").style.display = "block";
    summaryMainContainer.classList.add('activeDiv');
    summaryMainContainer.classList.remove('leftPastDiv');
    guestCheckoutMainContainer.classList.remove('activeDiv');
    break;
    default:
    currentDivPosition++;
    break;
  }
}



function renderAvailableTimeSlots(appointmentsData, dayOfWeekArray){
  var startTime = dayOfWeekArray.startTime;
  var endTime = dayOfWeekArray.endTime;
  var appointmentDuration = appointmentInfos.duration;
  var timeParentContainer = document.getElementById("timeSelectorDivNewAppointment");
  timeParentContainer.innerHTML = "";

  if(appointmentsData.length>0){
    console.log("some appointments"+datePickedAppointment+":");
    console.log(appointmentsData);
  }else{
    console.log("no appointments"+datePickedAppointment);
    //no appointments that day
    for(var i = startTime; (i+appointmentDuration)<endTime;i+=5){
      var appointmentStartTime = i;
      var appointmentEndTime = i+appointmentDuration;

      var timeLabelContainer = document.createElement("label");
      timeLabelContainer.classList.add("timeCheckboxLabel");
      timeLabelContainer.setAttribute('starttime', appointmentStartTime);
      timeLabelContainer.setAttribute('endtime', appointmentEndTime);

      var timeChildContainer = document.createElement("div");
      timeChildContainer.classList.add("timeDivAroundText");

      var timeNameSpan = document.createElement("span");
      timeNameSpan.classList.add("timeCheckboxSpan");
      timeNameSpan.innerText = minutesTo12HourString(appointmentStartTime)+" - "+minutesTo12HourString(appointmentEndTime);

      var timeRadioButton = document.createElement("input");
      timeRadioButton.type="radio";
      timeRadioButton.classList.add("timeCheckboxInput");
      timeRadioButton.name = "appointmentTimeRadio";

      timeChildContainer.appendChild(timeRadioButton);
      timeChildContainer.appendChild(timeNameSpan);
      timeLabelContainer.appendChild(timeChildContainer);

      timeParentContainer.appendChild(timeLabelContainer);
    }
  }


  document.getElementById("nextButton").innerHTML = 'Next';
}


function renderMessageNoTimeSlots(messageToDisplay){

  var timeInnerDiv = document.createElement("div");
  timeInnerDiv.classList.add("timeDivAroundText");
  var timeLabel = document.createElement('label');
  timeLabel.classList.add("newAppointmentCheckboxText");
  timeLabel.innerText = messageToDisplay;
  timeInnerDiv.appendChild(timeLabel);
  var timeParentContainer = document.getElementById("timeSelectorDivNewAppointment");
  timeParentContainer.innerHTML = "";
  timeParentContainer.appendChild(timeInnerDiv);
document.getElementById("nextButton").innerHTML = 'Next';
}




function addEmployeeToSelector(employeeName, employeePositionInStoreObj, employeeParentContainer){
var employeeSelectorLabelContainer = document.createElement("label");
employeeSelectorLabelContainer.classList.add("employeeCheckboxLabel");
employeeSelectorLabelContainer.setAttribute('employeeid', employeePositionInStoreObj);

var employeeChildContainer = document.createElement("div");
employeeChildContainer.classList.add("employeeDivAroundText");

var employeeNameSpan = document.createElement("span");
employeeNameSpan.classList.add("employeeCheckboxSpan");
employeeNameSpan.innerText = employeeName;

var employeeRadioButton = document.createElement("input");
employeeRadioButton.type="radio";
employeeRadioButton.classList.add("employeeCheckboxInput");
employeeRadioButton.name = "appointmentEmployeeRadio";

employeeChildContainer.appendChild(employeeRadioButton);
employeeChildContainer.appendChild(employeeNameSpan);
employeeSelectorLabelContainer.appendChild(employeeChildContainer);
employeeParentContainer.appendChild(employeeSelectorLabelContainer);
return employeeRadioButton;
}







<% }else{ %>
  var notClaimedDivCloseButton = document.getElementById('notClaimedDivCloseButton');
  notClaimedDivCloseButton.onclick = function(){
    newAppointmentContainer.classList.remove("activeNewAppointmentDiv");
    document.body.style.overflow = "remove";
  }

<% } %>




</script>
<style>
  #guestCheckoutMainContainer{
    height:100% !important;
  }

  input[type=checkbox] {
    -moz-appearance:initial;
  }
  input[type=radio] {
    -moz-appearance:initial;
  }
  @media screen and (min-width:780px){

    #storeInfoParentContainerDiv{
      width:20%;
      left:20%;
      position:fixed;
      top:80px;
      height:calc(100% - 60px);
      border:none;
    }
    #storeName{
      width:100%;
      padding:0 20px 0 20px;
      left:0;
      top:0;
      margin:0;
      position:relative;
      font-size:var(--desktop-font-size-page-title);
      font-weight:var(--mobile-font-weight-bold);
    }
    .divTitleP{
      font-size:var(--desktop-font-size-big);
      font-weight:var(--mobile-font-weight-bold);
      margin:0;
      width:100%;
      left:0;
      padding:10px 20px 0 20px;
      cursor:context-menu;
    }
    .backButton{
      position:relative;
      display:block;
      height:30px;
      margin: 20px 0 0 20px;
      cursor:pointer;
    }
    .categoryHeader{
      padding-top:5px;
      position:absolute;
      top:0;
      height:130px;
      left:0;
      width:100%;
      border:none;
    }
    .categoryContentScroll{
      position:absolute;
      height:calc(100% - 130px);
      width:100%;
      top:130px;
      border:none;
      overflow-y:auto;
    }
  }
  @media screen and (max-width:780px){

    #storeInfoParentContainerDiv{
      display:none;
    }
    .divTitleP{
      font-size:var(--desktop-font-size-extra-big);
      font-weight:var(--mobile-font-weight-bold);
      margin:0;
      width:100%;
      left:0;
      padding:10px 20px 0 20px;
      cursor:context-menu;
    }
    .backButton{
      position:relative;
      display:block;
      height:40px;
      margin: 0 0 0 20px;
      cursor:pointer;
    }
    .categoryHeader{
      padding-top:5px;
      position:absolute;
      top:0;
      height:130px;
      left:0;
      width:100%;
      border:none;
    }
    .categoryContentScroll{
      position:absolute;
      height:calc(100% - 130px);
      width:100%;
      top:130px;
      border:none;
      overflow-y:auto;
    }
    .activeDiv{
      left:0 !important;
    }
  }


  #dateSelectorDivNewAppointment{
    width: calc(100% - 40px);
    border-radius: var(--official-border-radius);
    padding: 10 20;
    border: 1px solid #000;
    margin: 0 0 20 20;
    cursor: pointer;
  }
  #dateSelectorPNewAppointment{
    margin:0;
    text-align:center;
  }
  #dateSelectorPNewAppointment span{
    margin-right:15px;
    vertical-align:top;
    position:relative;
  }
  #dateSelectorPNewAppointment img{
    position:relative;
    height:20px;
    top:50%;
    left:0;
  }
  #timeSelectorDivNewAppointment{
    position: relative;
    width: calc(100% - 60px);
    margin: 0 0 20px 0;
    left: 30px;
    background-color: transparent;
    color: #000;
    transition: all 0.3s;
    text-align: center;
    border: none;
    min-height:100px;
  }
  #employeeSelectorDivNewAppointment{
    position: relative;
    width: calc(100% - 40px);
    margin: 0 0 20 0;
    left: 20;
    background-color: transparent;
    color: #000;
    transition: all 0.3s;
    text-align: center;
    border: none;
    min-height:100px;
  }
  #nextButton{
    position:absolute;
    bottom:10px;
    height:45px;
    width:calc(100% - 40px);
    left:20px;
    cursor:pointer;
    border-radius:4px;
    border:none;
    background-color:var(--cta-accent-color);
    color:#fff;
    font-size:var(--desktop-font-size-modal-title);
    font-weight:var(--mobile-font-weight-bold);
  }


  .leftPastDiv{
    left:-100% !important;
  }




#otherServiceInput{
display: block;
position: relative;
margin-left: -30px;
width: 180px;
float: right;
border-radius: 3px;
border: 1px solid #000;
}
  #servicesContainer{
    position: relative;
    top: 10px;
    width: calc(100% - 40px);
    height: auto;
    left: 20px;
  }
  .serviceDivAroundText{
    background-color: #fff;
    border: var(--nav-bar-border);
    border-radius: var(--official-border-radius);
    position: relative;
    width: 100%;
    margin: 0 0 10px 0;
    left: 0;
    padding: 15px;
    color: #000;
    transition: all 0.3s;
    text-align: center;
  }
  .serviceCheckboxLabel{
    cursor:pointer;
  }
  .serviceCheckboxInput:after{
    position: relative;
    display: block;
    width: 20px;
    height: 20px;
    border-radius: 50%;
    border: 1px solid #808080;
    content: "";
    visibility: visible;
    background: #FFF;
    transition: 0.3s all;
  }
  .serviceCheckboxInput:checked:after{
    background-color: var(--main-color);
    border: none;
    background-image: url("data:image/svg+xml,%3Csvg width='32' height='32' viewBox='0 0 32 32' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M5.414 11L4 12.414l5.414 5.414L20.828 6.414 19.414 5l-10 10z' fill='%23fff' fill-rule='nonzero'/%3E%3C/svg%3E ");
    background-repeat: no-repeat;
    background-position: 0px -2px;
    background-size: inherit;
  }
  .serviceCheckboxInput{
    visibility: hidden;
    position: absolute;
    left: 20px;
    top: calc(50% - 4px);
    transform: translateY(-50%);
    cursor: pointer;
  }



  .employeeDivAroundText{
    background-color: #fff;
    border: var(--nav-bar-border);
    border-radius: var(--official-border-radius);
    position: relative;
    width: 100%;
    margin: 0 0 10px 0;
    left: 0;
    padding: 15px;
    color: #000;
    transition: all 0.3s;
    text-align: center;
  }
  .employeeCheckboxLabel{
    cursor:pointer;
  }
  .employeeCheckboxInput:after{
    position: relative;
    display: block;
    width: 20px;
    height: 20px;
    border-radius: 50%;
    border: 1px solid #808080;
    content: "";
    visibility: visible;
    background: #FFF;
    transition: 0.3s all;
  }
  .employeeCheckboxInput:checked:after{
    background-color: var(--main-color);
    border: none;
    background-image: url("data:image/svg+xml,%3Csvg width='32' height='32' viewBox='0 0 32 32' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M5.414 11L4 12.414l5.414 5.414L20.828 6.414 19.414 5l-10 10z' fill='%23fff' fill-rule='nonzero'/%3E%3C/svg%3E ");
    background-repeat: no-repeat;
    background-position: 0px -2px;
    background-size: inherit;
  }
  .employeeCheckboxInput{
    visibility: hidden;
    position: absolute;
    left: 20px;
    top: calc(50% - 4px);
    transform: translateY(-50%);
    cursor: pointer;
  }

  .timeDivAroundText{
    background-color: #fff;
    border: var(--nav-bar-border);
    border-radius: var(--official-border-radius);
    position: relative;
    width: 100%;
    margin: 0 0 10px 0;
    left: 0;
    padding: 15px;
    color: #000;
    transition: all 0.3s;
    text-align: center;
  }
  .timeCheckboxLabel{
    cursor:pointer;
  }
  .timeCheckboxInput:after{
    position: relative;
    display: block;
    width: 20px;
    height: 20px;
    border-radius: 50%;
    border: 1px solid #808080;
    content: "";
    visibility: visible;
    background: #FFF;
    transition: 0.3s all;
  }
  .timeCheckboxInput:checked:after{
    background-color: var(--main-color);
    border: none;
    background-image: url("data:image/svg+xml,%3Csvg width='32' height='32' viewBox='0 0 32 32' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M5.414 11L4 12.414l5.414 5.414L20.828 6.414 19.414 5l-10 10z' fill='%23fff' fill-rule='nonzero'/%3E%3C/svg%3E ");
    background-repeat: no-repeat;
    background-position: 0px -2px;
    background-size: inherit;
  }
  .timeCheckboxInput{
    visibility: hidden;
    position: absolute;
    left: 20px;
    top: calc(50% - 4px);
    transform: translateY(-50%);
    cursor: pointer;
  }







  .lds-ring {
    display: inline-block;
    position: relative;
    width: 20px;
    height: 20px;
    vertical-align: middle;
    margin-left:10px;
}
.lds-ring div {
  box-sizing: border-box;
  display: block;
  position: absolute;
  width: 20px;
  height: 20px;
  margin: 0;
  border: 3px solid #fff;
  border-radius: 50%;
  animation: lds-ring 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;
  border-color: #fff transparent transparent transparent;
}
.lds-ring div:nth-child(1) {
  animation-delay: -0.45s;
}
.lds-ring div:nth-child(2) {
  animation-delay: -0.3s;
}
.lds-ring div:nth-child(3) {
  animation-delay: -0.15s;
}
@keyframes lds-ring {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}



#servicesErrorP{
  padding-left:20px;
  margin:0;
  width:100%;
  padding-top:20px;
}
</style>


<script src="/jsFiles/calendarSelectorPopup.js" async></script>
<link rel="stylesheet" href="/css/calendarSelectorPopup.css" media="print" onload="this.media='all'">

<% }else{ %>

This store doesnt exist.


  <% } %>
