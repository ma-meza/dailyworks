<% include partials/regularEmptyHead.ejs %>
<% include partials/clientTopNavBar.ejs %>
<% include partials/clientBottomNavBar.ejs %>
<script type="text/javascript"
  src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAK_QD5Epg6sI-Hli0LRmfHQqYmWC4yDPA&libraries=places"></script>

<div id="searchSuggestionContainer">

</div>

<div id="contentContainerHp">
  <div id="topPartContainer" class="hpParentContainers">
    <img id="headerLogoImg" src="assets/logos/dwFullLogoBlack.svg" alt="">
    <a id="topSignupLink" href="/signup"><%= __('Sign up') %></a>
    <p id="pageHeader"><%= __('Book appointments with local') %> <span id="serviceTypeSpan"></span>
      <%= __('wow123456') %>
    </p>
    <p class="labelAboveInput"><%= __('Choose a store type') %></p>
    <input class="searchInputs" id="storeTypeInput" placeholder="Mechanic, optometrist, barber, psychologist, doctor"
      type="text" name="" value="">
    <p class="labelAboveInput"><%= __('and a location') %></p>
    <input id="locationInput" placeholder="Montreal, Laval, Delson, Longueil, Quebec..." type="text" name="" value="">
    <button type="button" onclick="getGeolocation()" id="getCurrentLocationButton" name="button"></button>
    <button type="button" id="searchSubmit" name="button"><%= __('Search') %></button>
  </div>

  <div id="bottomPartContainer" class="hpParentContainers">
    <p id="cityLinkText"><a href="#" class="cityLinks">Montréal</a> • <a href="#" class="cityLinks">Québec</a> • <a
        href="#" class="cityLinks">Laval</a> • <a href="#" class="cityLinks">Montérégie</a></p>



    <% if(locals.coords){ %>
    yooo
    <% }else{ %>
    <p class="pageSubHeader"><%= __('Explore Dailyworks') %></p>
    <div class="serviceTypeParentContainer">

    </div>
    <div class="serviceTypeParentContainer">

    </div>
    <div class="serviceTypeParentContainer">

    </div>
    <% } %>

    <% if(locals.languageCookie){ %>
    <% if(languageCookie == "fr"){ %>
    <select id='langSelect'>
      <option value='fr' selected>Francais</option>
      <option value='en'>English</option>
    </select>
    <% }else{ %>
    <select id='langSelect'>
      <option value='fr'>Francais</option>
      <option value='en' selected>English</option>
    </select>
    <% } %>
    <% }else{ %>
    <select id='langSelect'>
      <option value='fr'>Francais</option>
      <option value='en' selected>English</option>
    </select>
    <% } %>


    <p id="footerText">©
      <script>document.write(new Date().getFullYear());</script> Dailyworks, Inc. <%= __('All rights reserved.') %></p>
  </div>
</div>

<script>
  //0 means user input location, 1 means user clicked coords
  var locationInputSource = 0;
  var locationInput = document.getElementById('locationInput');
  var locationCoords = {};
  var storeTypeId = -1;

  function getGeolocation() {
    if (navigator.geolocation) {
      navigator.geolocation.getCurrentPosition(function (position) {
        geocodeLatLong(position.coords);
        console.log(position.coords);
        // $.ajax({
        //    url : '/setCookieLocationClient',
        //    type : 'POST',
        //    data:{coords:position.coords},
        //    success : function(data, textStatut){
        //      if(data == "error"){
        //      }else if(data == "ok"){
        //      }
        //    },
        //    error : function(textStatut, errorThrown){
        //      console.log(textStatut);
        //      console.log(errorThrown);
        //    }
        // });
      });
    } else {
      //cant get geo
      alert("Cant get location");
    }
  }

  document.getElementById('getCurrentLocationButton').onclick = function () {
    getGeolocation();
  }
  var geocoder = new google.maps.Geocoder;





  function geocodeLatLong(coords) {
    var latLong = { lat: coords.latitude, lng: coords.longitude };

    geocoder.geocode({ 'location': latLong }, function (results, status) {
      if (status === 'OK') {
        if (results[0]) {
          console.log(results);
          locationInput.value = results[0].address_components[2].short_name;
          locationInputSource = 1;
        } else {
          window.alert('No results found');
        }
      } else {
        window.alert('Geocoder failed due to: ' + status);
      }
    });

  }



  var serviceTypeSpan = document.getElementById('serviceTypeSpan');
  var servicesArray = ["<%= __('mechanics') %>", "<%= __('barbers') %>", "<%= __('optometrists') %>", "<%= __('psychologists') %>"];
  var nbServices = servicesArray.length;
  var positionInServicesArray = 0;
  var charIterator = 0;
  function writeWord() {
    if (charIterator < servicesArray[positionInServicesArray].length) {
      serviceTypeSpan.innerText += servicesArray[positionInServicesArray].charAt(charIterator);
      charIterator++;
      setTimeout(writeWord, 120);
    } else {
      charIterator = 0;
      setTimeout(function () {
        deleteWord();
      }, 2000);
    }
  }

  function deleteWord() {
    if (serviceTypeSpan.innerText.length > 0) {
      serviceTypeSpan.innerText = serviceTypeSpan.innerText.substring(0, serviceTypeSpan.innerText.length - 1);
      setTimeout(deleteWord, 100);
    } else {
      positionInServicesArray = (positionInServicesArray + 1) % nbServices;
      writeWord();
    }
  }

  document.getElementById("searchSubmit").onclick = function () {
    var storeTypeInput = storeTypeId;
    var locationObj = { source: locationInputSource };
    var locationIsFilled = false;
    var locationUrlString = "";
    if (locationInputSource == 0) {
      //user inputted manually his location
      if (locationInput.value.length > 0) {
        locationIsFilled = true;
        locationObj.content = locationInput.value;
        locationUrlString = "locQuery=" + locationInput.value;
      } else {
        locationIsFilled = false;
        alert("location input not filled");
      }
    } else {
      //user used coords button
      var lat = locationCoords.lat;
      var long = locationCoords.long;
      if (lat.length > 0 && long.length > 0) {
        locationIsFilled = true;
        locationObj.content = { lat: lat, long: long };
        locationUrlString = "lat=" + lat + "&long=" + long;
      } else {
        locationIsFilled = false;
        alert("location input not filled");
      }
    }

    if (storeTypeInput != -1 && locationIsFilled == true) {
      console.log(storeTypeInput);
      console.log(locationObj);
      // window.location = "/feed?stype="+storeTypeInput.value+"&"+locationUrlString;
    } else {
      alert("servicetype not filled");
    }
  };

  writeWord();




  var searchSuggestionContainer = document.getElementById('searchSuggestionContainer');
  storeTypeInput.oninput = function () {
    if (this.value.length > 0) {
      storeTypeId = -1;
      createStoreTypeSuggest(this.value, this);
    } else {
      storeTypeId = -1;
      searchSuggestionContainer.style.display = "none";
    }
  }

  var storeTypes = [{ typeId: 0, name: "Mechanic" }, { typeId: 0, name: "Msdwdhanic" }, { typeId: 0, name: "Mewkwkanic" }, { typeId: 0, name: "Mechanic" }, { typeId: 0, name: "Msdwdhanic" }, { typeId: 0, name: "Mewkwkanic" }];

  window.addEventListener("click", function (event) {
    if (event.target != searchSuggestionContainer) {
      searchSuggestionContainer.style.display = "none";
    }
  });


  function createStoreTypeSuggest(inputValue, inputElement) {
    searchSuggestionContainer.style.top = (inputElement.getBoundingClientRect().top + window.scrollY + 50) + "px";
    var nbResults = 0;
    searchSuggestionContainer.innerHTML = "";
    for (var i = 0; i < storeTypes.length && nbResults < 5; i++) {
      (function (i) {
        if (storeTypes[i].name.toLowerCase().includes(inputValue.toLowerCase())) {
          var storeTypeContainer = document.createElement('div');
          storeTypeContainer.classList.add("searchSuggestionInnerContainer");
          storeTypeContainer.onclick = function () {
            inputElement.value = storeTypes[i].name;
            storeTypeId = storeTypes[i].typeId;
          }
          storeTypeContainer.setAttribute("sid", storeTypes[i].typeId);
          var storeTypeP = document.createElement("p");
          storeTypeP.innerText = storeTypes[i].name;
          console.log(storeTypes[i].name);
          nbResults++;
          storeTypeContainer.appendChild(storeTypeP);
          searchSuggestionContainer.appendChild(storeTypeContainer);
        }
      })(i);
    }
    if (nbResults > 0) {
      searchSuggestionContainer.style.display = "block";
      searchSuggestionContainer.style.height = ((nbResults * 30) + 10) + "px";
    } else {
      searchSuggestionContainer.style.display = "none";
    }

  }
</script>
<style media="screen">
  @media screen and (max-width:780px) {
    #headerLogoImg {
      width: 40%;
      position: relative;
      margin: 0 0 0 20px;
      top: 0;
      left: 0;
    }

    #topSignupLink {
      font-size: var(--mobile-font-size-regular);
      font-weight: var(--mobile-font-weight-medium);
      position: relative;
      float: right;
      margin: 0 20px 0 0;
      color: #000;
    }

    #pageHeader {
      color: #000;
      font-size: var(--mobile-font-size-page-title);
      font-weight: var(--mobile-font-weight-bold);
      position: relative;
      top: 0;
      left: 0;
      width: 100%;
      margin: 0 0 50px 0;
      padding: 70px 20px 0 20px;
      min-height: 190px;
    }
  }

  @media screen and (min-width:780px) {
    #contentContainerHp {
      position: relative;
      top: 0;
      left: 50%;
      transform: translateX(-50%);
      margin: 80px 0 0 0;
      height: auto;
      max-width: 1200px;
      width: 70%;
    }

    #headerLogoImg {
      display: none;
    }

    #topSignupLink {
      display: none;
    }

    #pageHeader {
      color: #000;
      font-size: var(--desktop-font-size-tallest);
      font-weight: var(--mobile-font-weight-bold);
      position: relative;
      top: 0;
      left: 0;
      width: 100%;
      margin: 0 0 50px 0;
      padding: 70px 20px 0 20px;
      min-height: 190px;
    }
  }

  #searchSuggestionContainer {
    position: absolute;
    width: calc(100% - 40px);
    left: 20px;
    background-color: #fff;
    border: 1px solid #000;
    z-index: 100;
    padding-top: 10px;
    display: none;
  }

  .searchSuggestionInnerContainer {
    position: relative;
    top: 0;
    left: 0;
    width: 100%;
    height: auto;
    margin: 0;
  }

  .searchSuggestionInnerContainer p {
    width: 100%;
    margin: 0;
    padding: 0 10px 0 10px;
    font-size: var(--mobile-font-size-regular);
    font-weight: var(--mobile-font-weight-regular);
    margin-bottom: 10px;
  }

  #cityLinkText {
    font-size: var(--mobile-font-size-regular);
    font-weight: var(--mobile-font-weight-regular);
    color: #000;
    width: 100%;
    padding: 0 20px 0 20px;
    margin: 0 0 100px 0;
    text-align: center;
  }

  #cityLinkText a {
    color: #000;
  }

  .hpParentContainers {
    width: 100%;
    left: 0;
    min-height: 20px;
    top: 0;
    position: relative;
    margin: 0;
    border: none;
    padding: 20px 0 0 0;
    font-size: 0;
  }

  #bottomPartContainer {
    margin-bottom: 70px;
    min-height: 50px;
  }



  .labelAboveInput {
    color: #000;
    font-size: var(--mobile-font-size-big);
    font-weight: var(--mobile-font-weight-medium);
    position: relative;
    top: 0;
    left: 0;
    margin: 0 0 10px 0;
    width: 100%;
    padding: 0 20px 0 20px;
  }

  .searchInputs {
    position: relative;
    margin: 0 0 15px 20px;
    left: 0px;
    top: 0;
    width: calc(100% - 40px);
    border-radius: 4px;
    border: 1px solid #c9c9c9;
    height: 50px;
    padding: 0 10px 0 10px;
    font-size: var(--mobile-font-size-big);
  }

  #locationInput {
    position: relative;
    margin: 0 0 20px 20px;
    left: 0;
    top: 0;
    width: calc(100% - 80px);
    border-radius: 4px 0 0 4px;
    border: 1px solid #c9c9c9;
    height: 50px;
    padding: 0 10px 0 10px;
    font-size: var(--mobile-font-size-big);
    display: inline-block;
    vertical-align: top;
  }

  #getCurrentLocationButton {
    display: inline-block;
    margin: 0;
    width: 40px;
    height: 50px;
    position: relative;
    vertical-align: top;
    border-radius: 0 4px 4px 0;
    border: 1px solid #000;
    cursor: pointer;
    background: url('assets/icons/octiconsSvg/location.svg') no-repeat;
    background-position: center;
    border: 1px solid #c9c9c9;
    border-left: none !important;
  }

  #searchSubmit {
    position: relative;
    width: calc(100% - 40px);
    top: 0;
    color: #fff;
    left: 0;
    margin: 0 20px 40px 20px;
    height: 52px;
    border-radius: 4px;
    border: none;
    font-size: var(--mobile-font-size-big);
    font-weight: var(--mobile-font-weight-bold);
    cursor: pointer;
    background: var(--gradient-cta-background);
  }

  #footerText {
    margin: 0;
    top: 0;
    left: 0;
    padding: 0 20px 0 20px;
    font-size: var(--mobile-font-size-regular);
    font-weight: var(--mobile-font-weight-regular);
    color: #a1a1a1;
    text-align: center;
  }

  .pageSubHeader {
    font-weight: var(--mobile-font-weight-bold);
    font-size: var(--mobile-font-size-big);
    width: 100%;
    padding: 0 0 0 20px;
    margin: 0 0 20px 0;
  }

  .serviceTypeParentContainer {
    position: relative;
    width: calc(50% - 30px);
    margin: 0 0 20px 20px;
    height: 120px;
    border: 1px solid #000;
    border-radius: 8px;
    display: inline-block;
  }
</style>


<script>
  locationInput.oninput = function () {
    locationInputSource = 0;
  }
  google.maps.event.addDomListener(window, 'load', initialize);
  function initialize() {
    var autocomplete = new google.maps.places.Autocomplete(locationInput);
    autocomplete.addListener('place_changed', function () {
      var place = autocomplete.getPlace();
      // place variable will have all the information you are looking for.
      locationInputSource = 1;
      locationCoords.lat = place.geometry['location'].lat().toString();
      locationCoords.long = place.geometry['location'].lng().toString();

    });
  }


</script>
<% include partials/changeLanguageScript %>